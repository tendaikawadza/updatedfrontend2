{"version":3,"sources":["stockdashboard.component.ts"],"names":["core_1","require","forms_1","StockdashboardComponent","router","auth","productService","messageService","confirmationService","fb","this","items","label","icon","products","productId","productCode","productName","productDescription","productCategory","quantityOnHand","categoryOpt","name","code","prototype","ngOnInit","_this","addProductForm","group","Validators","required","getAllProducts","subscribe","data","Object","defineProperty","controls","openNew","product","submitted","productDialog","deleteSelectedProducts","confirm","message","header","accept","filter","val","selectedProducts","includes","add","severity","summary","detail","life","editProduct","patchValue","deleteProduct","hideDialog","onSubmit","console","log","value","invalid","addProduct","push","findIndexById","id","index","i","length","createId","chars","charAt","Math","floor","random","logout","logOut","navigate","__decorate","Component","selector","templateUrl","styleUrls","exports"],"mappings":"6YAAA,IAAAA,OAAAC,QAAA,iBACAC,QAAAD,QAAA,kBAYAE,wBAAA,WA2BI,SAAAA,EAAoBC,EAAsBC,EAAoCC,EAAsCC,EACxGC,EAAkDC,GAD1CC,KAAAN,OAAAA,EAAsBM,KAAAL,KAAAA,EAAoCK,KAAAJ,eAAAA,EAAsCI,KAAAH,eAAAA,EACxGG,KAAAF,oBAAAA,EAAkDE,KAAAD,GAAAA,EA3B9DC,KAAAC,MAAQ,CACJ,CAACC,MAAO,OAAQC,KAAM,oBACtB,CAACD,MAAO,WAAYC,KAAM,mBAC1B,CAACD,MAAO,SAAUC,KAAM,0BAI5BH,KAAAI,SAAoB,CAChB,CAAEC,UAAW,GAAIC,YAAa,GAAIC,YAAa,OAAQC,mBAAoB,OAAQC,gBAAiB,YAAaC,eAAgB,GACjI,CAAEL,UAAW,GAAIC,YAAa,IAAKC,YAAa,YAAaC,mBAAoB,OAAQC,gBAAiB,YAAaC,eAAgB,GACvI,CAAEL,UAAW,GAAIC,YAAa,IAAKC,YAAa,eAAgBC,mBAAoB,OAAQC,gBAAiB,YAAaC,eAAgB,IAE9IV,KAAAW,YAAc,CACV,CAAEC,KAAM,WAAYC,KAAM,YAC1B,CAAED,KAAM,SAAUC,KAAM,UACxB,CAAED,KAAM,iBAAkBC,KAAM,mBA+HxC,OAjHIpB,EAAAqB,UAAAC,SAAA,WAAA,IAAAC,EAAAhB,KACIA,KAAKiB,eAAiBjB,KAAKD,GAAGmB,MAAM,CAChCX,YAAa,CAAC,GAAI,CAACf,QAAA2B,WAAWC,WAC9Bd,YAAa,CAAC,GAAI,CAACd,QAAA2B,WAAWC,WAC9BV,eAAgB,CAAC,GAAI,CAAClB,QAAA2B,WAAWC,WACjCX,gBAAiB,CAAC,GAAI,CAACjB,QAAA2B,WAAWC,WAClCZ,mBAAoB,CAAC,GAAI,CAAChB,QAAA2B,WAAWC,aAEzCpB,KAAKJ,eAAeyB,iBAAiBC,UAAU,SAAAC,GAAQ,OAAAP,EAAKZ,SAAWmB,KAE3EC,OAAAC,eAAIhC,EAAAqB,UAAA,IAAC,KAAL,WACI,OAAOd,KAAKiB,eAAeS,0CAG/BjC,EAAAqB,UAAAa,QAAA,WACI3B,KAAK4B,QAAU,GACf5B,KAAK6B,WAAY,EACjB7B,KAAK8B,eAAgB,GAGzBrC,EAAAqB,UAAAiB,uBAAA,WAAA,IAAAf,EAAAhB,KACIA,KAAKF,oBAAoBkC,QAAQ,CAC7BC,QAAS,yDACTC,OAAQ,UACR/B,KAAM,6BACNgC,OAAQ,WACJnB,EAAKZ,SAAWY,EAAKZ,SAASgC,OAAO,SAAAC,GAAO,OAACrB,EAAKsB,iBAAiBC,SAASF,KAC5ErB,EAAKnB,eAAe2C,IAAI,CAAEC,SAAU,UAAWC,QAAS,aAAcC,OAAQ,mBAAoBC,KAAM,UAKpHnD,EAAAqB,UAAA+B,YAAA,SAAYjB,GACR5B,KAAKiB,eAAe6B,WAAWlB,GAC/B5B,KAAK8B,eAAgB,GAGzBrC,EAAAqB,UAAAiC,cAAA,SAAcnB,GAAd,IAAAZ,EAAAhB,KACIA,KAAKF,oBAAoBkC,QAAQ,CAC7BC,QAAS,mCAAqCL,EAAQrB,YAAc,IACpE2B,OAAQ,UACR/B,KAAM,6BACNgC,OAAQ,WACJnB,EAAKZ,SAAWY,EAAKZ,SAASgC,OAAO,SAAAC,GAAO,OAAAA,EAAI/B,cAAgBsB,EAAQtB,cACxEU,EAAKY,QAAU,GACfZ,EAAKnB,eAAe2C,IAAI,CAAEC,SAAU,UAAWC,QAAS,aAAcC,OAAQ,kBAAmBC,KAAM,UAKnHnD,EAAAqB,UAAAkC,WAAA,WACIhD,KAAK8B,eAAgB,EACrB9B,KAAK6B,WAAY,GAGrBpC,EAAAqB,UAAAmC,SAAA,WAAA,IAAAjC,EAAAhB,KACIkD,QAAQC,IAAInD,KAAKiB,eAAemC,OAC5BpD,KAAKiB,eAAeoC,UAGxBrD,KAAK6B,WAAY,EACjB7B,KAAKJ,eAAe0D,WAAWtD,KAAKiB,eAAemC,OAAO9B,UAAU,SAACC,GAC7DA,GACAP,EAAKZ,SAASmD,KAAKvC,EAAKC,eAAemC,OACvCpC,EAAKnB,eAAe2C,IAAI,CAAEC,SAAU,UAAWC,QAAS,4CAA6CC,OAAQ,wBAG7G3B,EAAKnB,eAAe2C,IAAI,CAAEC,SAAU,UAAWC,QAAS,kFAAmFC,OAAQ,2BAqB/JlD,EAAAqB,UAAA0C,cAAA,SAAcC,GAEV,IADA,IAAIC,GAAS,EACJC,EAAI,EAAGA,EAAI3D,KAAKI,SAASwD,OAAQD,IACtC,GAAI3D,KAAKI,SAASuD,GAAGrD,cAAgBmD,EAAI,CACrCC,EAAQC,EACR,MAIR,OAAOD,GAGXjE,EAAAqB,UAAA+C,SAAA,WAGI,IAFA,IAAIJ,EAAK,GACLK,EAAQ,iEACHH,EAAI,EAAGA,EAAI,EAAGA,IACnBF,GAAMK,EAAMC,OAAOC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMF,SAExD,OAAOH,GAEXhE,EAAAqB,UAAAqD,OAAA,WACIjB,QAAQC,IAAI,OACdnD,KAAKL,KAAKyE,SACVpE,KAAKN,OAAO2E,SAAS,CAAC,WA7If5E,EAAuB6E,WAAA,CALnChF,OAAAiF,UAAU,CACPC,SAAU,qBACVC,YAAa,kCACbC,UAAW,CAAC,qCAEHjF,GAAb,GAAakF,QAAAlF,wBAAAA","file":"stockdashboard.component.min.js","sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { Stock } from '../model/stock';\nimport { AuthenticationService } from '../service/authentication.service';\nimport { StockService } from '../service/stock.service';\n\n@Component({\n    selector: 'app-stockdashboard',\n    templateUrl: './stockdashboard.component.html',\n    styleUrls: ['./stockdashboard.component.css']\n})\nexport class StockdashboardComponent {\n    items = [\n        {label: 'Home', icon: 'pi pi-fw pi-home'},\n        {label: 'Settings', icon: 'pi pi-fw pi-cog'},\n        {label: 'Logout', icon: 'pi pi-fw pi-power-off'},\n      ];\n    productDialog: boolean;\n\n    products: Stock[] = [\n        { productId: 11, productCode: 17, productName: \"test\", productDescription: \"test\", productCategory: \"tets desc\", quantityOnHand: 4 },\n        { productId: 12, productCode: 155, productName: \"test prod\", productDescription: \"test\", productCategory: \"tets desc\", quantityOnHand: 5 },\n        { productId: 13, productCode: 166, productName: \"test test no\", productDescription: \"test\", productCategory: \"tets desc\", quantityOnHand: 6 },\n    ];\n    categoryOpt = [\n        { name: 'accounts', code: 'accounts' },\n        { name: 'admini', code: 'admini' },\n        { name: 'human resourse', code: 'human resourse' },\n\n    ];\n\n    product: any;\n\n    selectedProducts: Stock[];\n\n    submitted: boolean;\n    addProductForm: FormGroup;\n\n    constructor(private router:Router,private auth:AuthenticationService, private productService: StockService, private messageService: MessageService,\n        private confirmationService: ConfirmationService, private fb: FormBuilder) { }\n\n    ngOnInit() {\n        this.addProductForm = this.fb.group({\n            productName: ['', [Validators.required]],\n            productCode: ['', [Validators.required]],\n            quantityOnHand: ['', [Validators.required]],\n            productCategory: ['', [Validators.required]],\n            productDescription: ['', [Validators.required]],\n        });\n        this.productService.getAllProducts().subscribe(data => this.products = data);\n    }\n    get f(): any {\n        return this.addProductForm.controls;\n    }\n\n    openNew() {\n        this.product = {};\n        this.submitted = false;\n        this.productDialog = true;\n    }\n\n    deleteSelectedProducts() {\n        this.confirmationService.confirm({\n            message: 'Are you sure you want to delete the selected products?',\n            header: 'Confirm',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n                this.products = this.products.filter(val => !this.selectedProducts.includes(val));\n                this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Products Deleted', life: 3000 });\n            }\n        });\n    }\n\n    editProduct(product: Stock) {\n        this.addProductForm.patchValue(product);\n        this.productDialog = true;\n    }\n\n    deleteProduct(product: Stock) {\n        this.confirmationService.confirm({\n            message: 'Are you sure you want to delete ' + product.productName + '?',\n            header: 'Confirm',\n            icon: 'pi pi-exclamation-triangle',\n            accept: () => {\n                this.products = this.products.filter(val => val.productCode !== product.productCode);\n                this.product = {};\n                this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Deleted', life: 3000 });\n            }\n        });\n    }\n\n    hideDialog() {\n        this.productDialog = false;\n        this.submitted = false;\n    }\n\n    onSubmit() {\n        console.log(this.addProductForm.value)\n        if (this.addProductForm.invalid) {\n            return\n        }\n        this.submitted = true;\n        this.productService.addProduct(this.addProductForm.value).subscribe((data: any) => {\n            if (data) {\n                this.products.push(this.addProductForm.value);\n                this.messageService.add({ severity: 'success', summary: 'Product successfully added to the catalog', detail: 'Via MessageService' });\n            }\n            else {\n                this.messageService.add({ severity: 'success', summary: 'Product could not be Added to the catalog : Check Specification of your product', detail: 'Via MessageService' });\n            }\n\n        })\n        // if (this.product.productCode.trim()) {\n        //     if (this.product.productCode) {\n        //         this.products[this.findIndexById(this.product.productCode)] = this.product;\n        //         this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Updated', life: 3000 });\n        //     }\n        //     else {\n        //         this.product.productCode = this.createId();\n\n        //         this.messageService.add({ severity: 'success', summary: 'Successful', detail: 'Product Created', life: 3000 });\n        //     }\n\n        //     this.products = [...this.products];\n        //     this.productDialog = false;\n        //     this.product = {};\n        // }\n    }\n\n    findIndexById(id: number): number {\n        let index = -1;\n        for (let i = 0; i < this.products.length; i++) {\n            if (this.products[i].productCode === id) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    createId(): string {\n        let id = '';\n        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        for (var i = 0; i < 5; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return id;\n    }\n    logout(){\n        console.log('ddd')\n      this.auth.logOut();\n      this.router.navigate(['login']);\n    }\n}\n\n"]}